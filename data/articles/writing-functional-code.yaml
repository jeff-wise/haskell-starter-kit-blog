
---
title: Writing Functional Code
time_created: 2017-11-28T00:00:00Z
body: |+
  Before we review the source code, let's review some principles of
  Haskell programming. Learning Haskell can be difficult because there 
  are so many new concepts and it's hard to figure out to use them when 
  you finally sit down to start programming. Fortunately,
  while there are a lot of concepts, we can group
  them into three simple categories: data types, functions, and
  composition. We'll show how understanding these three simple
  concepts in Haskell is enough to start writing great software.

  While these principles are universal, it's often difficult to apply
  them in other programming languages. This is either because other
  languages lack certain features such as sum types or function currying
  or because those languages encourage a different way of thinking about
  or modeling software.

  ### Data Types

  TODO

  ### Functions

  TODO

  ### Composition

  If someone asked me why I think Haskell programs are more concise and
  more maintainable than programs written in C, Java, Go, etc... I would
  say that *Haskell enables compositional programming*.

  TODO
